* Packages
#+BEGIN_SRC emacs-lisp
  (install-packages '(circe))
#+END_SRC

* Paths
#+BEGIN_SRC emacs-lisp
  (setenv "PATH"
          (concat "/home/davor/bin/bin:"
                  (getenv "PATH")))

  (setq exec-path (append exec-path '("~/bin/bin")))
#+END_SRC
** Journal
#+BEGIN_SRC emacs-lisp
  (setf org-journal-dir "~/Documents/text/journal/")
#+END_SRC
* Enviroment variables
  Use the libraries in my home directory
#+BEGIN_SRC emacs-lisp
  (setenv "LD_LIBRARY_PATH"
          (concat "/home/davor/bin/lib"
                  (getenv "LD_LIBRARY_PATH")))
#+END_SRC
* Custom functions
** open-notes-folder
   Direds to the folder that I keep notes in.

#+BEGIN_SRC emacs-lisp
  (defun open-notes-folder ()
    "Direds to the folder that I keep notes in"
    (interactive)
    (dired "~/Documents/text/notes/"))
#+END_SRC
* poetry-mode
#+BEGIN_SRC emacs-lisp
  (load-library "~/.emacs.d/poetry.el")
  (require 'poetry)
#+END_SRC
* Look & Feel
** Themes
   Good ones are =leuven=, =material=, =material-light=.

#+BEGIN_SRC emacs-lisp
  (install-packages '(dracula-theme))
  (load-theme 'dracula t)
#+END_SRC
** Fonts
#+BEGIN_SRC emacs-lisp
  (if window-system
      (set-face-attribute 'default nil
                          :font "Source Code Pro"
                          :height 110))
#+END_SRC
* irc
#+BEGIN_SRC emacs-lisp
  (require 'circe)

  (let ((private-file "~/.private.el"))
    (when (file-exists-p private-file)
      (load-file private-file)))

  (setq circe-default-realname "davorb"
        circe-ignore-list nil
        circe-server-coding-system '(utf-8 . undecided)
        circe-server-auto-join-channels '(("^freenode$" "#djvi"))
        ;; password is defined in ~/.private.el
        circe-nickserv-passwords `(("Freenode" ,freenode-passwd))
        circe-network-options '(("Freenode"
                                 :tls t
                                 :nick "davorb"))

        lui-max-buffer-size 30000
        lui-flyspell-p t
        lui-flyspell-alist '(("#djvi" "swedish")
                             ("." "american")))

  (eval-after-load "circe"
    '(progn
       (require 'lui-irc-colors)
       (add-to-list 'lui-pre-output-hook 'lui-irc-colors)))
#+END_SRC
** Hide the join/part spam
#+BEGIN_SRC emacs-lisp
  (setq circe-reduce-lurker-spam t)
#+END_SRC
** Enable =lui= logging
#+BEGIN_SRC emacs-lisp
  (load "lui-logging" nil t)
  (setq lui-logging-directory "~/logs")
  (setq lui-logging-flush-delay 30)
  (enable-lui-logging-globally)
#+END_SRC
* sup
  Enable =message-mode= when composing emails for =sup=.

#+BEGIN_SRC emacs-lisp
  (add-to-list 'auto-mode-alist '("/sup.*eml$" . message-mode))
  (add-hook 'message-mode-hook (lambda ()
                                 (auto-fill-mode 1)
                                 (flyspell-mode 1)))

  ;;; move the cursor down to the first empty line
  (add-hook 'message-mode-hook (lambda ()
    (auto-fill-mode 1)
    (flyspell-mode 1)
    (search-forward-regexp "^$")))
#+END_SRC
