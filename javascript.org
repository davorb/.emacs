#+TITLE: JavaScript

* Install packages
  #+BEGIN_SRC emacs-lisp
    (install-packages
     '(
       nodejs-repl
       typescript-mode
       web-mode
       ))
  #+END_SRC
* web-mode
  #+BEGIN_SRC emacs-lisp
    (add-to-list 'auto-mode-alist '("\\.js\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.jsx\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.mjs\\'" . web-mode))

    (setq web-mode-content-types-alist
              '(("jsx" . "\\.[c|m]js[x]?\\'")))

    (add-hook 'web-mode-hook #'electric-indent-mode)
    (add-hook 'web-mode-hook #'electric-pair-mode)

    (add-hook 'web-mode-hook
              (lambda ()
                (if (equal web-mode-content-type "javascript")
                    (web-mode-set-content-type "jsx")
                  (message "now set to: %s" web-mode-content-type))))
  #+END_SRC
* Set indentation
  #+BEGIN_SRC emacs-lisp
    (let ((val 2))
      (setq js-indent-level val
            typescript-indent-level val
            js-indent-level val
            jsx-indent-level val
            web-mode-markup-indent-offset val
            web-mode-css-indent-offset val
            web-mode-script-padding val
            web-mode-code-indent-offset val
            web-mode-attr-indent-offset val))

    (setq web-mode-indentation-params '())
    (add-to-list 'web-mode-indentation-params '("lineup-args" . nil))
    (add-to-list 'web-mode-indentation-params '("lineup-calls" . nil))
    (add-to-list 'web-mode-indentation-params '("lineup-concats" . nil))
    (add-to-list 'web-mode-indentation-params '("lineup-quotes" . nil))
    (add-to-list 'web-mode-indentation-params '("lineup-ternary" . nil))
    (add-to-list 'web-mode-indentation-params '("case-extra-offset" . nil))
  #+END_SRC
* Highlight keywords
  #+BEGIN_SRC emacs-lisp
    (font-lock-add-keywords 'espresso-mode
                            '(("\\<\\(FIX\\|TODO\\|FIXME\\|HACK\\|REFACTOR\\):"
                               1 font-lock-warning-face t)))
  #+END_SRC
* Tabs are the devil's spaces
  #+BEGIN_SRC emacs-lisp
    (add-hook 'javascript-mode-hook
              '(lambda ()
                 (add-hook 'before-save-hook
                           (lambda ()
                             (untabify (point-min) (point-max))))))
  #+END_SRC
* SASS
  #+BEGIN_SRC emacs-lisp
    (package-install 'sass-mode)
  #+END_SRC
* Disable syntax highlighting
  #+BEGIN_SRC emacs-lisp
    (setq js2-mode-show-strict-warnings nil)
  #+END_SRC
