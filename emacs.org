#+TITLE: Dawn Emacs

This is the first "real" file to be loaded.

* Functions
  This file defines a lot of important functions, like
  =org-babel-load-files=.

  #+BEGIN_SRC emacs-lisp
    (org-babel-load-file "~/.emacs.d/functions.org")
  #+END_SRC
* Basic Editor Settings
** Backups
   #+BEGIN_SRC emacs-lisp
     (setq backup-directory-alist
           '(("." . "~/.saves")))
     (setq delete-old-versions t
           kept-new-versions 6
           kept-old-versions 2
           version-control t)
     (setq backup-by-copying t) ; safest, but slowest
   #+END_SRC
* Disable tabs
  #+BEGIN_SRC emacs-lisp
    (setq-default indent-tabs-mode nil)
  #+END_SRC
* Remove trailing whitespace
  #+BEGIN_SRC emacs-lisp
    (add-hook 'before-save-hook 'delete-trailing-whitespace)
  #+END_SRC
** Load other generic configuration files
   #+BEGIN_SRC emacs-lisp
     (org-babel-load-file "~/.emacs.d/helm.org")
   #+END_SRC
** Replace highlighted text with what you type.
   #+BEGIN_SRC emacs-lisp
     (delete-selection-mode t)
   #+END_SRC
** yasnippet
   #+BEGIN_SRC emacs-lisp
     (setq yas-snippet-dirs '("~/.emacs.d/snippets")
           yas/indent-line nil) ; Stop yasnippet from performing autoindentation.
   #+END_SRC
** dired
   Hide hidden files

   #+BEGIN_SRC emacs-lisp
     (require 'dired-x)
     (setq dired-omit-files "^\\...+$")
     (add-hook 'dired-mode-hook (lambda () (dired-omit-mode 1)))
   #+END_SRC
* writeroom-mode
  #+BEGIN_SRC emacs-lisp
    (package-install 'writeroom-mode)
  #+END_SRC
* evil-mode
;;; Ctrl-u for scrolling up
  #+BEGIN_SRC emacs-lisp
    (package-install 'evil)
    (require 'evil)

    (use-package evil
      :ensure t
      :defer t
      :config (setq evil-want-C-u-scroll t))
  #+END_SRC
* Load other configuration files
  #+BEGIN_SRC emacs-lisp
    (org-babel-load-files '("misc"
                            "look"
                            "programming"
                            "keybindings"))
  #+END_SRC
* Load host-specific configuration file
  #+BEGIN_SRC emacs-lisp
    (load-host-specific-conf)
  #+END_SRC
